[K.N.King] Chapter 3 
#Programming Projects

1. Wirte a program that accepts a date from the user in the form mm/dd/yyyy and then displays
it in the from yyyymmdd:
int main()
{
	int a, b, c;

	printf("Enter a date: (mm/dd/yyyy)");
	scanf_s("%d %d %d,", &a, &b, &c);
	printf("You entered the date: %d/%d/%d", c, a, b);

	system("pause");
	return 0;
}

2. Write a program that formats product information entered by the user. A session with the program
should look like this:
int main()
{
	int num;
	float price;
	int m, d, y;

	printf("Enter item number");
	scanf_s("%d", &num);
	printf("Enter unit price");
	scanf_s("%f", &price);
	printf("Enter purchase date (mm/dd/yyyy)");
	scanf_s("%d %d %d", &m, &d, &y);

	printf("Item\tUnit\tPurchase\n\tPrice\tDate\n%d\t$  %.2f\t%d/%d/%d",num,price,m,d,y);
	system("pause");
	return 0;
}


3. Books are identified by an International Standard Book Number (ISBN). ISBNs assigned after January
1, 2007 contain 13 digits, arranged in five groups, such as 978-0-393-97950-3. (Older ISBNs use 10 digits.)
The first group (the GSI prefix) is currently either 978 or 979. The group identifier specifies teh language
or country of origin (for example, 0 and 1 are used in ENglish-speaking countries). The publishier code identifies
the publisher (393 is the code for W. W. Norton). The item number is assigned by the publisher to identify a specific 
book (97950 is code for this book). An ISBN ends with a check digit that's used to verify the accuracy of the 
preceding digits. Write a program that breaks down an ISBN entered by the user:

4. Wirte a program that prompts the user to enter a telephone number in the from (xxx) xxx-xxxx and then displays
the number in the form xxx.xxx.xxx:
int main()
{
	int a, b, c;

	printf("Enter phone number [(xxx)-xxx-xxxx]:");
	scanf_s("%d %d %d", &a, &b, &c);
	printf("You entered %d.%d.%d", a, b, c);

	system("pause");
	return 0;
}

5. Wirte a program that programs that asks the user to enter the numbers from 1 to 16 (in any order) and then displays
the numbers in a 4 by 4 arrangement, followed by the sums of the rows, columns, and diagonals:

6. Modify the addfrac.c program of Section 3.2 so that the user enters both fractions at the same time,
separated by a plus sign:
int main()
{
	int a, b, c, d, e, f;

	scanf_s("%d%d%d%d",&a,&d,&c,&d);
	e = c * d;
	f = (a*d) + (b*c);
	printf("%d/%d+%d/%d=%d/%d", a, c, b, d, f, e);

	system("pause");
	return 0;
}

Chpater 4
#Exercise

1. Show the output produced by each of the following program fragments. Assume that i,j,and k are int variables.
 (a) i = 5; j = 3;
    printf("%d %d", i / j, i % j); -> 1, 2
 (b) i = 2; j = 3;
    printf("%d", (i+10) %  j); -> 0
 (c) i = 7; j = 8; k = 9;
    printf("%d", (i + 10) % k / j); -> 1
 (d) i = 1; j = 2; k = 3;
    printf("%d", (i + 5) % (j + 2) / k); -> 0

2. If i and j are positive integers, does (-i)/j always have the same value as -(i/j)? Justify your answer.
 -> Yes

3. What is the value of each of the following expressions in C89?
 (a) 8 / 5  
 (b) -8 / 5 
 (c) 8 / -5 
 (d) -8 / -5 

4. Repeat Exercise 3 for C99.
 (a) 8 / 5 -> 1
 (b) -8 / 5 -> -1
 (c) 8 / -5 -> -1
 (d) -8 / -5 ->1

5. What is the value of each of the following expressions in C89?

6. Repeat Exercise 5 for C99.

7. The algorithm for computing the UPC check digit ends with the following steps:
Subtrat 1 from the total.      9-((total-1) % 10 )
Compute the remainder when the adjusted total is divided by 10.
Subtract the ramainder from 9.
It's tempting to try to simplify the algorithm by using these steps instead:
Compute the remainder when the total is divided by 10.
Subtract the remainder from 10.
Why doesn't this technique work?
->연산 순서가 다르기 떄문에

8. Would the upc.c program still work if the expression 9 - ((total - 1 ) % 10) were replaced by (10 - (total % 10))
% 10? Yes

9. Show the output produced by each of the following program fragments. Assume that i,j,and k are int variables
 (a) i = 7; j = 8;
     i *= j + 1;
     printf("%d %d", i, j); -> 63, 8
 (b) i = j = k = 1;
     i += j += k;
     printf("%d %d %d", i, j, k); -> 3, 2, ,1
 (c) i = 1, j = 2; k = 3;
     i -= j -= k;
     printf("%d %d %d",i,j,k); -> 2, -`1, 3
 (d) i = 2; j = 1; k = 0;
     i *= j *= k;
     printf("%d %d %d", i, j, k); -> 0 0 0

10. Show the output produced by each of the following program fragments. Assume that i and j are int variables.
 (a) i = 6;
     j = i += i;
     printf("%d %d", i, j); -> 12, 12
 (b) i = 5;
     j = (i -= 2) + 1;
     printf("%d %d", i, j); -> 5, 4
 (c) i = 7;
     j = 6 + (i = 2.5); -> 
     printf("%d %d",i,j); -> 2, 8
 (d) i = 2; j = 8;
     j = (i = 6) + (j = 3);
     printf("%d %d", i, j); -> 6, 9

11. Show the output produced by each of the following program fragments. Assume that i,j, and k are int variables. 
 (a) i = 1;
     printf("%d ", i++ - 1);
     printf("%d", i); -> 0,2
 (b) i = 10; j = 5;
     printf("%d ", i++ - ++j);
     printf("%d %d", i, j); -> 4, 11, 16
 (c) i = 7; j = 8;
     printf("%d ", i++ - --j);
     printf("%d %d", i,j); -> 0,8,7
 (d) i = 3; j = 4; k = 5;
     printf("%d ", i++ - j++ + --k);
     printf("%d %d %d", i, j, k); -> 3,4,5,4
 
12. Show the output produced by each of the following program fragments. Assume that i and j are int variables.
 (a) i = 5;
     j = ++i * 3 -2;
     printf("%d %d", i, j); -> 6, 16
 (b) i = 5;
     j = 3 - 2 * i++;
     printf("%d %d", i, j); -> 6 ,-7
 (c) i = 7;
     j = 3 + --i + 2;
     printf("%d %d", i, j); -> 6, 11
 (d)i = 7;
    j = 3 + --i * 2;
    printf("%d %d", i, j); -> 6, 15

13. Only one of the expressions ++i and i++ is exactly the same as (i += 1); which is it? Justify your answer.
-> ++i
14. Supply parentheses to show how a C compiler would interpret each of the following expressions.
 (a) (a * b) - (c * d) + e
 (b) a / b % c / d
 (c) - a - b + c - + d
 (d) (a * - b) / c - d

15. Give the values of i and j after each of the following expression statements has been executed.
 (a) i += j; -> 3,2
 (b) i--; -> 0
 (c) i * j / i; -> 2
 (d) i % ++j; -> 1























